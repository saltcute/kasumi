# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Relase NPM Package

on:
    release:
        types: [published] # fires on Release publish
    push:
        tags:
            - "v*" # also fire when you push tags like v1.2.3

permissions:
    contents: read

concurrency:
    group: publish-npm
    cancel-in-progress: false

jobs:
    publish:
        name: Publish package to npm
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  registry-url: https://registry.npmjs.org/
                  cache: npm
                  cache-dependency-path: |
                      package-lock.json

            - name: Install
              run: npm ci

            - name: Build
              run: npm run make

            - name: Verify release tag matches package.json version
              id: ver
              run: |
                  TAG="${{ github.event.release.tag_name }}"
                  # strip a leading 'v' from tag (e.g., v1.2.3 -> 1.2.3)
                  CLEAN_TAG="${TAG#v}"
                  PKG_VERSION="$(node -p "require('./package.json').version")"
                  echo "Tag: $TAG"
                  echo "Clean tag: $CLEAN_TAG"
                  echo "package.json version: $PKG_VERSION"
                  if [ "$CLEAN_TAG" != "$PKG_VERSION" ]; then
                    echo "::error::Release tag ($TAG) does not match package.json version ($PKG_VERSION)"
                    exit 1
                  fi
                  echo "version=$PKG_VERSION" >> "$GITHUB_OUTPUT"

            - name: Publish to npm
              env:
                  # Use an npm automation token stored as an Actions secret
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
              run: |
                  npm publish --access public
